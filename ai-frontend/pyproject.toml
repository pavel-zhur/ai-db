[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ai-frontend"
version = "0.1.0"
description = "AI-managed React frontend generation for AI-DB"
authors = ["AI-DB Team"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/pavel-zhur/ai-db"
packages = [{include = "ai_frontend", from = "src"}]

[tool.poetry.dependencies]
python = "^3.13"
ai-shared = {path = "../ai-shared", develop = true}
pydantic = "^2.10"
pydantic-settings = "^2.7"
pyyaml = "^6.0"
aiofiles = "^24.1"
jsonschema = "^4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4"
pytest-asyncio = "^1.0"
mypy = "^1.16"
ruff = "^0.12"
black = "^25.1"
types-aiofiles = "^24.1"
types-PyYAML = "^6.0"

[tool.mypy]
python_version = "3.13"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false

[tool.black]
line-length = 100
target-version = ["py313"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["S101", "S603", "S607"]  # Allow assert and subprocess for our use case

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]